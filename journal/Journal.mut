
class Journal extends web.View {
  object journal_ = null;
  object journalItems_ = null;

  override void create() {
    element = <web.CollectionView name="div" collection=journalItems_
        render=renderItem style_=style.journal/>;
  }

  bind tag renderItem(container.Model item) {
    auto node = createNode(item.polymorph);
    if node is null { return null; }

    node.create();

    return node;
  }

  void createNode(int nodeType) {
    Node node = null;

    switch nodeType {
      case journal_model.NodeType.BLOCK:
        node = new Block();
        node.style_ = style.block;
        break;
      case journal_model.NodeType.H1:
        node = new Header1();
        node.style_ = style.header;
        break;
      case journal_model.NodeType.H2:
        node = new Header2();
        node.style_ = style.header;
        break;
      case journal_model.NodeType.TEXT:
        node = new Text();
        node.style_ = style.text;
        break;
      case journal_model.NodeType.CODE:
        node = new Code();
        node.style_ = style.code;
        break;
      case journal_model.NodeType.LINK:
        node = new Link();
        node.style_ = style.link;
        break;
      case journal_model.NodeType.VIDEO:
        node = new Video();
        node.style_ = style.video;
        break;
      case journal_model.NodeType.GOOGLE_MAP:
        node = new GoogleMap();
        node.style_ = style.googleMap;
        break;
      case journal_model.NodeType.FILE:
        node = new File();
        node.style_ = style.file;
        break;
      case journal_model.NodeType.IMAGE:
        node = new Image();
        node.style_ = style.image;
        break;
      case journal_model.NodeType.GALLERY:
        node = new Gallery();
        node.style_ = style.gallery;
        break;
      case journal_model.NodeType.BIG_SLIDER:
        node = new BigSlider();
        node.style_ = style.bigSlider;
        break;
      case journal_model.NodeType.MINI_SLIDER:
        node = new MiniSlider();
        node.style_ = style.miniSlider;
        break;
      case journal_model.NodeType.ANCHOR:
        node = new Anchor();
        node.style_ = style.anchor;
        break;
      case journal_model.NodeType.BREAK:
        node = new Break();
        node.style_ = style.break_;
        break;
    }

    return node;
  }
}
