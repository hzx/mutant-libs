
class GoogleMapApi {
  static bool isStart = false;
  static bool isLoad = false;
  static object queue = [];

  static void loadApi(object callback) {
    if GoogleMapApi.isLoad {
      callback();
    } else {
      GoogleMapApi.queue.push(callback);
      if GoogleMapApi.isStart is false { // start load api
        GoogleMapApi.isStart = true;
        browser.addJsUrl("https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&callback=mutant.journal.GoogleMapApi.onLoad");
      }
    }
  }

  static void onLoad() {
    GoogleMapApi.isLoad = true;
    for object func: GoogleMapApi.queue {
      func();
    }
  }
}


class GoogleMap extends web.View {
  journal_model.GoogleMap item = null;

  object map = null;

  GoogleMap() {
    style_ = style.googleMap;
  }

  override void create() {
    element = <div style=style_.element></div>;
  }

  override void enter() {
    if isEnter { return; }
    base.enter();

    GoogleMapApi.loadApi(onApiLoad);
  }

  override void exit() {
    if !isEnter { return; }

    base.exit();
  }

  bind void onApiLoad() {
    // create map here

    object options = {
      disableDefaultUI: true,
      panControl: true,
      zoomControl: true,
      zoomControlOptions: {
        style: google.maps.ZoomControlStyle.LARGE
      },
      scrollwheel: false,
      zoom: item.zoom.value,
      center: new google.maps.LatLng(item.lat.value, item.lng.value)
    };

    map = new google.maps.Map(element.node, options);

    /* for item in this.markers */
    // add marker
    auto pos = new google.maps.LatLng(item.lat.value, item.lng.value);

    marker = new google.maps.Marker({
      position: pos,
      map: map,
      /* icon: item.image */
    });
  
    /* object options = { */
    /*   disableDefaultUI: true, */
    /*   panControl: true, */
    /*   zoomControl: true, */
    /*   zoomControlOptions: { */
    /*     style: google.maps.ZoomControlStyle.LARGE */
    /*   }, */
    /*   scrollwheel: false, */
    /*   zoom: zoom, */
    /*   center: new google.maps.LatLng(lat, lng) */
    /* }; */

    /* map = new google.maps.Map(element.node, options); */

    // add icons
  }


}
