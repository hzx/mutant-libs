
class Text extends web.View {
  Text() {
    style_ = style.text;
  }

  override void create() {
    element = <div style=style_.element></div>;

    auto texts = Text.splitText(this.item.text.value);

    tag p;
    for int i = 0; i < texts.length; ++i {
      p = <div style=style_.paragraph>
        <span> texts[i] </span>
      </div>;

      element.append(p);
    }
  }

  // get or create last paragraph in which we join first text, link, file
  tag getOrCreateLastParagraph() {
    tag p = element.last;

    if p is null {
      p = <div style=style_.paragraph></div>;

      element.append(p);
    }

    return p;
  }

  void joinTextObject(journal_model.Text item) {
    auto texts = Text.splitText(item.text.value);
    if texts.length is 0 { return; }

    auto p = getOrCreateLastParagraph();

    auto first = <span> texts[0] </span>;
    p.append(first);

    for int i = 1; i < texts.length; ++i {
      p = <div style=style_.paragraph>
        <span> texts[i] </span>
      </div>;

      element.append(p);
    }
  }

  void joinLink(tag link) {
    auto p = getOrCreateLastParagraph();
    p.append(link);
  }

  void joinFile(tag file) {
    auto p = getOrCreateLastParagraph();
    p.append(file);
  }

  static object splitText(string value) {
    auto buf = [];

    int left = 0;
    int right = 0;
    bool isLeftFound = false;
    int nCount = 0;
    string n13 = "\n";
    string ch;

    for int i = 0; i < value.length; ++i {
      ch = value[i];
      if ch is n13 {
        nCount = nCount + 1;

        if nCount is 1 {
          right = i;
          continue;
        }

        if nCount is 2 and isLeftFound {
          isLeftFound = false;
          buf.push(value.substring(left, right));
        }
      } else {
        nCount = 0;
        if !isLeftFound {
          isLeftFound = true;
          left = i;
        }
      }
    }

    if isLeftFound and value.length - left > 1 {
      buf.push(value.substring(left, value.length));
    }

    return buf;
  }
}
