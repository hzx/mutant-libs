
object createItem(int type) {
  switch type {
    case NodeType.BLOCK:
      return new Block();
    case NodeType.H1:
      return new Header();
    case NodeType.H2:
      return new Header2();
    case NodeType.TEXT:
      return new Text();
    case NodeType.CODE:
      return new Code();
    case NodeType.LINK:
      return new Link();
    case NodeType.VIDEO:
      return new Video();
    case NodeType.GOOGLE_MAP:
      return new GoogleMap();
    case NodeType.FILE:
      return new File();
    case NodeType.IMAGE:
      return new Image();
    case NodeType.GALLERY:
      return new Gallery();
    case NodeType.BIG_SLIDER:
      return new BigSlider();
    case NodeType.MINI_SLIDER:
      return new MiniSlider();
    case NodeType.ANCHOR:
      return new Anchor();
    case NodeType.BREAK:
      return new Break();
  }
  
  return null;
}

void parsePageItems(string data, container.ObservableCollection items) {
  object rows = data.split(container.DELIM_ROW);
  int nodeType;
  object pices;

  if rows.length < 2 { return; }

  for int i = 0; i < rows.length; i = i + 2 {
    nodeType = window.parseInt(rows[i]);
    auto item = createItem(nodeType);
    if item is null { continue; } // unknown nodeType

    pices = rows[i + 1].split(container.DELIM_FIELD);
    item.unserialize(pices);

    items.appendLocal(item);
  }
}
