
class Video extends container.Model {
  auto nodeType = NodeType.VIDEO;
  auto pageId = new container.String();
  auto style = new container.String();
  auto text = new container.String();

  void setField(string key, string value) {
    int field = window.parseInt(key);
    switch field {
      case container.ModelField.ID:
        id.init(value);
        break;
      case VideoField.PAGE_ID:
        pageId.init(value);
        break;
      case VideoField.STYLE:
        style.init(value);
        break;
      case VideoField.TEXT:
        text.init(value);
        break;
    }
  }

  string serialize() {
    auto buf = [];

    buf.push(VideoField.TYPE, nodeType);
    if id.has { buf.push(container.ModelField.ID, id.value); }
    if pageId.has { buf.push(VideoField.PAGE_ID, pageId.value); }
    if style.has { buf.push(VideoField.STYLE, style.value); }
    if text.has { buf.push(VideoField.TEXT, text.value); }

    return buf.join(container.DELIM_FIELD);
  }

  void unserialize(object pices) {
    for int i = 0; i < pices.length; i=i+2 {
      setField(pices[i], pices[i+1]);
    }
  }
}


enum VideoField {
  TYPE = 2, // container.ModelField.ID + 1,
  PAGE_ID,
  STYLE,
  TEXT,
}
