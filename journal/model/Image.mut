
class Image extends container.Model {
  static int THUMB_WIDTH = 300;
  static int THUMB_HEIGHT = 225;

  auto pageId = new container.String();
  auto style = new container.String();
  auto filename = new container.String();
  auto alt = new container.String();

  Image() {
    polymorph = NodeType.IMAGE;

    enter();
  }

  void enter() {
    style.listen(onStyleUpdate);
    filename.listen(onFilenameUpdate);
    alt.listen(onAltUpdate);
  }

  void exit() {
    style.unlisten(onStyleUpdate);
    filename.unlisten(onFilenameUpdate);
    alt.unlisten(onAltUpdate);
  }

  void setField(int field, string value) {
    switch field {
      case container.ModelField.ID:
        id.set(value);
        break;
      case ImageField.PAGE_ID:
        pageId.set(value);
        break;
      case ImageField.STYLE:
        style.set(value);
        break;
      case ImageField.FILENAME:
        filename.set(value);
        break;
      case ImageField.ALT:
        alt.set(value);
        break;
    }
  }

  string serialize() {
    auto buf = [];

    if id.has { buf.push(container.ModelField.ID, id.value); }
    if pageId.has { buf.push(ImageField.PAGE_ID, pageId.value); }
    if style.has { buf.push(ImageField.STYLE, style.value); }
    if filename.has { buf.push(ImageField.FILENAME, filename.value); }
    if alt.has { buf.push(ImageField.ALT, alt.value); }

    return buf.join(container.DELIM_FIELD);
  }

  bind void onStyleUpdate(string val, string old) {
    eventUpdate.notify2(id.value, [ImageField.STYLE, val]);
  }

  bind void onFilenameUpdate(string val, string old) {
    eventUpdate.notify2(id.value, [ImageField.FILENAME, val]);
  }

  bind void onAltUpdate(string val, string old) {
    eventUpdate.notify2(id.value, [ImageField.ALT, val]);
  }
}


enum ImageField {
  PAGE_ID = 3, // container.ModelField.ID + TYPE + 1,
  STYLE,
  FILENAME,
  ALT,
}
