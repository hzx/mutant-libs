
class File extends container.Model {
  auto pageId = new container.String();
  auto style = new container.String();
  auto filename = new container.String();
  auto text = new container.String();
  auto alt = new container.String();

  File() {
    polymorph = NodeType.FILE;

    enter();
  }

  void enter() {
    style.listen(onStyleUpdate);
    filename.listen(onFilenameUpdate);
    text.listen(onTextUpdate);
    alt.listen(onAltUpdate);
  }
  
  void exit() {
    style.unlisten(onStyleUpdate);
    filename.unlisten(onFilenameUpdate);
    text.unlisten(onTextUpdate);
    alt.unlisten(onAltUpdate);
  }

  void setField(int field, string value) {
    switch field {
      case container.ModelField.ID:
        id.set(value);
        break;
      case FileField.PAGE_ID:
        pageId.set(value);
        break;
      case FileField.STYLE:
        style.set(value);
        break;
      case FileField.FILENAME:
        filename.set(value);
        break;
      case FileField.TEXT:
        text.set(value);
        break;
      case FileField.ALT:
        alt.set(value);
        break;
    }
  }

  string serialize() {
    auto buf = [];

    if id.has { buf.push(container.ModelField.ID, id.value); }
    if pageId.has { buf.push(FileField.PAGE_ID, pageId.value); }
    if style.has { buf.push(FileField.STYLE, style.value); }
    if filename.has { buf.push(FileField.FILENAME, filename.value); }
    if text.has { buf.push(FileField.TEXT, text.value); }
    if alt.has { buf.push(FileField.ALT, alt.value); }

    return buf.join(container.DELIM_FIELD);
  }

  bind void onStyleUpdate(string val, string old) {
    eventUpdate.notify2(id.value, [FileField.STYLE, val]);
  }

  bind void onFilenameUpdate(string val, string old) {
    eventUpdate.notify2(id.value, [FileField.FILENAME, val]);
  }

  bind void onTextUpdate(string val, string old) {
    eventUpdate.notify2(id.value, [FileField.TEXT, val]);
  }

  bind void onAltUpdate(string val, string old) {
    eventUpdate.notify2(id.value, [FileField.ALT, val]);
  }
}


enum FileField {
  PAGE_ID = 3, // container.ModelField.ID + TYPE + 1,
  STYLE,
  FILENAME,
  TEXT,
  ALT,
}
