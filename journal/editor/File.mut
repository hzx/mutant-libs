
class File extends VerticalNode {
  tag a = null;
  tag fileDialog = null;
  tag filename = null;
  tag textInput = null;
  tag textNode = null;
  tag altInput = null;
  tag altNode = null;

  object file = null;

  File() {
    code = journal.NodeType.FILE;
  }

  override void create() {
    createPlaceholders();

    a = <a href="" target="_blank" style=style_.a></a>;

    fileDialog = <ui.Upload onChange=onFileChange/>;

    filename = <div style=style_.filename></div>;

    textInput = <input style=ui_style.nestedInput onfocus=onTextFocus onblur=onTextBlur/>;

    textNode = <div style=style_.textNode active=style_.node_active onclick=onTextClick>
      <div style=style_.editwrap>
        <div style=style_.label> "текст:" </div>
        {textInput}
      </div>
    </div>;

    altInput = <input style=ui_style.nestedInput onfocus=onAltFocus onblur=onAltBlur/>;

    altNode = <div style=style_.altNode active=style_.node_active onclick=onAltClick>
      <div style=style_.editwrap>
        <div style=style_.label> "подсказка:" </div>
        {altInput}
      </div>
    </div>;

    element = <div style=style_.node ondragover=onDragover ondragenter=onDragenter ondragleave=onDragleave ondrop=onDrop>
      {topPlaceholder_}
      {bottomPlaceholder_}
      <div style=style_.move draggable=true ondragstart=onDragstart></div>
      <div style=style_.editwrap>
        <div style=style_.buttons>
          <div style=style_.uploadBtn onclick=onUploadBtnClick>
            {fileDialog}
            <span> "выбрать" </span>
          </div>
        </div>
        <div style=style_.filenameNode>
          <div style=style_.label> "новый файл:" </div>
          {filename}
        </div>
        {textNode}
        {altNode}
        <div style=style_.aNode>
          <div style=style_.label> "ссылка:" </div>
          {a}
        </div>
      </div>
    </div>;
  }

  override string serialize() {
    object buf = [];
    buf.push(code);
    buf.push(textInput.node.value);
    buf.push(altInput.node.value);
    // TODO: add file hash here

    return buf.join(container.DELIM_FIELD);
  }

  override void unserialize(object fields) {
    textInput.node.value = fields[1];
    altInput.node.value = fields[2];
  }

  override void enter() {
    if isEnter { return; }
    base.enter();
  }

  override void exit() {
    if !isEnter { return; }
    
    base.exit();
  }

  void focusText() {
    textNode.setState(web.STATE_ACTIVE);
    textInput.node.focus();
  }

  void blurText() {
    textNode.setState(web.STATE_NORMAL);
  }

  void focusAlt() {
    altNode.setState(web.STATE_ACTIVE);
    altInput.node.focus();
  }

  void blurAlt() {
    altNode.setState(web.STATE_NORMAL);
  }

  bind void onUploadBtnClick(object e) {
    fileDialog.click();
  }

  bind void onFileChange(object files) {
    if files.length < 1 { return; }
    file = files[0];

    /* browser.setText(a.node, file.name); */
    browser.setText(filename.node, file.name);
  }

  bind void onTextFocus(object e) {
    focusText();
  }

  bind void onTextBlur(object e) {
    blurText();
  }

  bind void onTextClick(object e) {
    focusText();
  }

  bind void onAltClick(object e) {
    focusAlt();
  }

  bind void onAltFocus(object e) {
    focusAlt();
  }

  bind void onAltBlur(object e) {
    blurAlt();
  }
}
