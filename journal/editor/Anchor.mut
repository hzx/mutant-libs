
class Anchor extends VerticalNode {
  tag nameInput = null;
  tag nameNode = null;

  Anchor() {
    code = journal_model.NodeType.ANCHOR;
  }

  override void create() {
    createPlaceholders();

    nameInput = <input style=ui_style.nestedInput
      onfocus=onNameFocus onblur=onNameBlur
      onchange=onNameChange
      bind=item.name render=renderInputValue/>;

    nameNode = <div style=style_.nameNode active=style_.node_active onclick=onNameClick>
      <div style=style_.editwrap>
        <div style=style_.label> "название:" </div>
        {nameInput}
      </div>
    </div>;

    element = <div style=style_.node ondragover=onDragover ondragenter=onDragenter ondragleave=onDragleave ondrop=onDrop>
      {topPlaceholder_}
      {bottomPlaceholder_}
      <div style=style_.move draggable=true ondragstart=onDragstart></div>
      <div style=style_.wrap>
        {nameNode}
      </div>
    </div>;
  }

  void renderInputValue(tag input, object ovalue) {
    input.node.value = ovalue.value;
  }

  void flushName() {
    item.name.set(nameInput.node.value);
  }

  void focusName() {
    nameNode.setState(web.STATE_ACTIVE);
    nameInput.node.focus();
  }

  void blurName() {
    nameNode.setState(web.STATE_NORMAL);
  }

  bind void onNameClick(object e) {
    focusName();
  }

  bind void onNameFocus(object e) {
    focusName();
  }

  bind void onNameBlur(object e) {
    blurName();
  }

  bind void onNameChange(object e) {
    flushName();
  }
}
