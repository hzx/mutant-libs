
class Link extends VerticalNode {
  tag urlInput = null;
  tag urlNode = null;
  tag textInput = null;
  tag textNode = null;
  tag altInput = null;
  tag altNode = null;

  Link() {
    code = journal_model.NodeType.LINK;
  }

  override void create() {
    createPlaceholders();

    urlInput = <input style=ui_style.nestedInput onfocus=onUrlFocus onblur=onUrlBlur/>;

    urlNode = <div style=style_.urlNode active=style_.node_active onclick=onUrlClick>
      <div style=style_.editwrap>
        <div style=style_.label> "адрес:" </div>
        {urlInput}
      </div>
    </div>;

    textInput = <input style=ui_style.nestedInput onfocus=onTextFocus onblur=onTextBlur/>;

    textNode = <div style=style_.textNode active=style_.node_active onclick=onTextClick>
      <div style=style_.editwrap>
        <div style=style_.label> "текст:" </div>
        {textInput}
      </div>
    </div>;

    altInput = <input style=ui_style.nestedInput onfocus=onAltFocus onblur=onAltBlur/>;

    altNode = <div style=style_.altNode active=style_.node_active onclick=onAltClick>
      <div style=style_.editwrap>
        <div style=style_.label> "подсказка:" </div>
        {altInput}
      </div>
    </div>;

    element = <div style=style_.node active=style_.node_active ondragover=onDragover ondragenter=onDragenter ondragleave=onDragleave ondrop=onDrop>
      {topPlaceholder_}
      {bottomPlaceholder_}
      <div style=style_.move draggable=true ondragstart=onDragstart></div>
      <div style=style_.wrap>
        {urlNode}
        {textNode}
        {altNode}
      </div>
    </div>;
  }

  override string serialize() {
    object buf = [];
    buf.push(code);
    buf.push(urlInput.node.value);
    buf.push(textInput.node.value);
    buf.push(altInput.node.value);

    return buf.join(container.DELIM_FIELD);
  }

  override void unserialize(object fields) {
    urlInput.node.value = fields[1];
    textInput.node.value = fields[2];
    altInput.node.value = fields[3];
  }

  void focusUrl() {
    urlNode.setState(web.STATE_ACTIVE);
    urlInput.node.focus();
  }

  void focusText() {
    textNode.setState(web.STATE_ACTIVE);
    textInput.node.focus();
  }

  void focusAlt() {
    altNode.setState(web.STATE_ACTIVE);
    altInput.node.focus();
  }

  void blurUrl() {
    urlNode.setState(web.STATE_NORMAL);
  }

  void blurText() {
    textNode.setState(web.STATE_NORMAL);
  }

  void blurAlt() {
    altNode.setState(web.STATE_NORMAL);
  }

  bind void onUrlClick(object e) {
    focusUrl();
  }

  bind void onTextClick(object e) {
    focusText();
  }

  bind void onUrlFocus(object e) {
    focusUrl();
  }

  bind void onTextFocus(object e) {
    focusText();
  }

  bind void onUrlBlur(object e) {
    blurUrl();
  }

  bind void onTextBlur(object e) {
    blurText();
  }

  bind void onAltClick(object e) {
    focusAlt();
  }

  bind void onAltFocus(object e) {
    focusAlt();
  }

  bind void onAltBlur(object e) {
    blurAlt();
  }
}
