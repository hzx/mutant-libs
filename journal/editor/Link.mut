
class Link extends VerticalNode {
  tag urlInput = null;
  tag urlNode = null;
  tag textInput = null;
  tag textNode = null;
  tag altInput = null;
  tag altNode = null;
  tag styleInput = null;
  tag styleNode = null;

  Link() {
    code = journal_model.NodeType.LINK;
  }

  override void create() {
    createPlaceholders();

    urlInput = <input style=ui_style.nestedInput onfocus=onUrlFocus
        onblur=onUrlBlur onchange=onUrlChange
        bind=item.src render=renderInputValue/>;

    urlNode = <div style=style_.urlNode active=style_.node_active
        onclick=onUrlClick>
      <div style=style_.editwrap>
        <div style=style_.label> "адрес:" </div>
        {urlInput}
      </div>
    </div>;

    textInput = <input style=ui_style.nestedInput onfocus=onTextFocus
        onblur=onTextBlur onchange=onTextChange
        bind=item.text render=renderInputValue/>;

    textNode = <div style=style_.textNode active=style_.node_active
        onclick=onTextClick>
      <div style=style_.editwrap>
        <div style=style_.label> "текст:" </div>
        {textInput}
      </div>
    </div>;

    altInput = <input style=ui_style.nestedInput onfocus=onAltFocus
        onblur=onAltBlur onchange=onAltChange
        bind=item.alt render=renderInputValue/>;

    altNode = <div style=style_.altNode active=style_.node_active
        onclick=onAltClick>
      <div style=style_.editwrap>
        <div style=style_.label> "подсказка:" </div>
        {altInput}
      </div>
    </div>;

    styleInput = <input style=ui_style.nestedInput
        onfocus=onStyleFocus onblur=onStyleBlur
        onchange=onStyleChange
        bind=item.style render=renderInputValue/>;

    styleNode = <div style=style_.styleNode
        active=style_.styleNode_active onclick=onStyleClick>
      <div style=style_.styleEditWrap>
        /* <div style=style_.label> "Стиль" </div> */
        {styleInput}
      </div>
    </div>;

    element = <div style=style_.node active=style_.node_active
        ondragover=onDragover ondragenter=onDragenter ondragleave=onDragleave
        ondrop=onDrop>
      {topPlaceholder_}
      {bottomPlaceholder_}
      <div style=style_.move draggable=true ondragstart=onDragstart></div>
      <div style=style_.wrap>
        {urlNode}
        {textNode}
        {altNode}
        {styleNode}
      </div>
    </div>;
  }

  void renderInputValue(tag input, object ovalue) {
    input.node.value = ovalue.value;
  }

  void flushStyle() {
    item.style.set(styleInput.node.value);
  }

  void flushSrc() {
    item.src.set(urlInput.node.value);
  }

  void flushAlt() {
    item.alt.set(altInput.node.value);
  }

  void flushText() {
    item.text.set(textInput.node.value);
  }

  override string serialize() {
    object buf = [];
    buf.push(code);
    buf.push(urlInput.node.value);
    buf.push(textInput.node.value);
    buf.push(altInput.node.value);

    return buf.join(container.DELIM_FIELD);
  }

  override void unserialize(object fields) {
    urlInput.node.value = fields[1];
    textInput.node.value = fields[2];
    altInput.node.value = fields[3];
  }

  void focusUrl() {
    urlNode.setState(web.STATE_ACTIVE);
    urlInput.node.focus();
  }

  void focusText() {
    textNode.setState(web.STATE_ACTIVE);
    textInput.node.focus();
  }

  void focusAlt() {
    altNode.setState(web.STATE_ACTIVE);
    altInput.node.focus();
  }

  void blurUrl() {
    urlNode.setState(web.STATE_NORMAL);
    flushSrc();
  }

  void blurText() {
    textNode.setState(web.STATE_NORMAL);
    flushText();
  }

  void blurAlt() {
    altNode.setState(web.STATE_NORMAL);
    flushAlt();
  }

  void focusStyle() {
    styleNode.setState(web.STATE_ACTIVE);
    styleInput.node.focus();
  }

  void blurStyle() {
    styleNode.setState(web.STATE_NORMAL);
    flushStyle();
  }

  bind void onUrlClick(object e) {
    focusUrl();
  }

  bind void onTextClick(object e) {
    focusText();
  }

  bind void onUrlFocus(object e) {
    focusUrl();
  }

  bind void onTextFocus(object e) {
    focusText();
  }

  bind void onUrlBlur(object e) {
    blurUrl();
  }

  bind void onUrlChange(object e) {
    flushSrc();
  }

  bind void onTextBlur(object e) {
    blurText();
  }

  bind void onTextChange(object e) {
    flushText();
  }

  bind void onAltClick(object e) {
    focusAlt();
  }

  bind void onAltFocus(object e) {
    focusAlt();
  }

  bind void onAltBlur(object e) {
    blurAlt();
  }

  bind void onAltChange(object e) {
    flushAlt();
  }

  bind void onStyleFocus(object e) {
    focusStyle();
  }

  bind void onStyleBlur(object e) {
    blurStyle();
  }

  bind void onStyleChange(object e) {
    flushStyle();
  }

  bind void onStyleClick(object e) {
    focusStyle();
  }
}
