
class Header2 extends VerticalNode {
  tag nameNode_ = null;
  tag nameInput_ = null;
  tag customStyleInput = null;
  tag customStyleNode = null;

  Header2() {
    code = journal_model.NodeType.H2;
  }

  override void create() {
    createPlaceholders();

    nameInput_ = <input style=ui_style.nestedInput
      onfocus=onNameFocus onblur=onNameBlur onchange=onTextChange
      bind=item.text render=renderInputValue/>;

    nameNode_ = <div style=style_.name2Node active=style_.nameNode_active
        onclick=onNameClick>
      <div style=style_.editwrap>
        <div style=style_.label> "Название" </div>
        {nameInput_}
      </div>
    </div>;

    customStyleInput = <input style=ui_style.nestedInput
        onfocus=onCustomStyleFocus onblur=onCustomStyleBlur
        onchange=onStyleChange
        bind=item.style render=renderInputValue/>;

    customStyleNode = <div style=style_.customStyleNode
        active=style_.customStyleNode_active onclick=onCustomStyleClick>
      <div style=style_.editwrap>
        <div style=style_.label> "Стиль" </div>
        {customStyleInput}
      </div>
    </div>;

    element = <div style=style_.h2 active=style_.header_active
        ondragover=onDragover ondragenter=onDragenter ondragleave=onDragleave
        ondrop=onDrop>
      {topPlaceholder_}
      {bottomPlaceholder_}
      <div style=style_.h2Move draggable=true ondragstart=onDragstart></div>
      <div style=style_.wrap>
        {nameNode_}
        {customStyleNode}
      </div>
    </div>;
  }

  void renderInputValue(tag input, object ovalue) {
    input.node.value = ovalue.value;
  }

  void flushText() {
    item.text.set(nameInput_.node.value);
  }

  void flushStyle() {
    item.style.set(customStyleInput.node.value);
  }

  void focusName() {
    nameNode_.setState(web.STATE_ACTIVE);
    nameInput_.node.focus();
  }

  void blurName() {
    nameNode_.setState(web.STATE_NORMAL);
    flushText();
  }

  void focusCustomStyle() {
    customStyleNode.setState(web.STATE_ACTIVE);
    customStyleInput.node.focus();
  }

  void blurCustomStyle() {
    customStyleNode.setState(web.STATE_NORMAL);
    flushStyle();
  }
  
  bind void onNameFocus(object e) {
    focusName();
  }

  bind void onNameBlur(object e) {
    blurName();
  }

  bind void onTextChange(object e) {
    flushText();
  }

  bind void onNameClick(object e) {
    focusName();
  }

  bind void onCustomStyleFocus(object e) {
    focusCustomStyle();
  }

  bind void onCustomStyleBlur(object e) {
    blurCustomStyle();
  }

  bind void onStyleChange(object e) {
    flushStyle();
  }

  bind void onCustomStyleClick(object e) {
    focusCustomStyle();
  }
}
