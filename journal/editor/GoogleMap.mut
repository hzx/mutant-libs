
class GoogleMap extends VerticalNode {
  tag latInput = null;
  tag latNode = null;
  tag lngInput = null;
  tag lngNode = null;
  tag zoomInput = null;
  tag zoomNode = null;
  tag iconNode = null;
  tag styleInput = null;
  tag styleNode = null;

  GoogleMap() {
    code = journal_model.NodeType.GOOGLE_MAP;
  }

  override void create() {
    createPlaceholders();

    latInput = <input style=style_.input
      onfocus=onLatFocus onblur=onLatBlur onchange=onLatChange
      bind=item.lat render=renderInputValue/>;
    latNode = <div style=style_.latNode active=style_.node_active
        onclick=onLatClick>
      <div style=style_.editwrap>
        <div style=style_.label> "широта:" </div>
        {latInput}
      </div>
    </div>;

    lngInput = <input style=style_.input
      onfocus=onLngFocus onblur=onLngBlur onchange=onLngChange
      bind=item.lng render=renderInputValue/>;
    lngNode = <div style=style_.lngNode active=style_.node_active
        onclick=onLngClick>
      <div style=style_.editwrap>
        <div style=style_.label> "долгота:" </div>
        {lngInput}
      </div>
    </div>;

    zoomInput = <input style=style_.input
      onfocus=onZoomFocus onblur=onZoomBlur onchange=onZoomChange
      bind=item.zoom render=renderInputValue/>;
    zoomNode = <div style=style_.zoomNode active=style_.node_active
        onclick=onZoomClick>
      <div style=style_.editwrap>
        <div style=style_.label> "масштаб:" </div>
        {zoomInput}
      </div>
    </div>;

    iconNode = <div style=style_.iconNode>
    </div>;

    styleInput = <input style=ui_style.nestedInput
        onfocus=onStyleFocus onblur=onStyleBlur onchange=onStyleChange
        bind=item.style render=renderInputValue/>;

    styleNode = <div style=style_.styleNode
        active=style_.styleNode_active onclick=onStyleClick>
      <div style=style_.styleEditWrap>
        /* <div style=style_.label> "Стиль" </div> */
        {styleInput}
      </div>
    </div>;

    element = <div style=style_.node ondragover=onDragover ondragenter=onDragenter ondragleave=onDragleave ondrop=onDrop>
      {topPlaceholder_}
      {bottomPlaceholder_}
      <div style=style_.move draggable=true ondragstart=onDragstart></div>
      <div style=style_.wrap>
        <div style=style_.row>
          {latNode}
          {lngNode}
          {zoomNode}
        </div>
        {styleNode}
        <a style=style_.a href="http://maps.google.com" target="_blank"> "maps.google.com" </a>
        {iconNode}
      </div>
    </div>;
  }

  void renderInputValue(tag input, object ovalue) {
    input.node.value = ovalue.value;
  }

  void flushLat() {
    item.lat.set(latInput.node.value);
  }

  void flushLng() {
    item.lng.set(lngInput.node.value);
  }

  void flushZoom() {
    item.zoom.set(zoomInput.node.value);
  }

  void flushStyle() {
    item.style.set(styleInput.node.value);
  }

  void focusLat() {
    latNode.setState(web.STATE_ACTIVE);
    latInput.node.focus();
  }

  void focusLng() {
    lngNode.setState(web.STATE_ACTIVE);
    lngInput.node.focus();
  }

  void focusZoom() {
    zoomNode.setState(web.STATE_ACTIVE);
    zoomInput.node.focus();
  }

  void blurLat() {
    latNode.setState(web.STATE_NORMAL);
    flushLat();
  }

  void blurLng() {
    lngNode.setState(web.STATE_NORMAL);
    flushLng();
  }

  void blurZoom() {
    zoomNode.setState(web.STATE_NORMAL);
    flushZoom();
  }

  void focusStyle() {
    styleNode.setState(web.STATE_ACTIVE);
    styleInput.node.focus();
  }

  void blurStyle() {
    styleNode.setState(web.STATE_NORMAL);
    flushStyle();
  }

  bind void onLatFocus(object e) {
    focusLat();
  }

  bind void onLatBlur(object e) {
    blurLat();
  }

  bind void onLatChange(object e) {
    flushLat();
  }

  bind void onLatClick(object e) {
    focusLat();
  }

  bind void onLngFocus(object e) {
    focusLng();
  }

  bind void onLngBlur(object e) {
    blurLng();
  }

  bind void onLngChange(object e) {
    flushLng();
  }

  bind void onLngClick(object e) {
    focusLng();
  }

  bind void onZoomFocus(object e) {
    focusZoom();
  }

  bind void onZoomBlur(object e) {
    blurZoom();
  }

  bind void onZoomChange(object e) {
    flushZoom();
  }

  bind void onZoomClick(object e) {
    focusZoom();
  }

  bind void onStyleFocus(object e) {
    focusStyle();
  }

  bind void onStyleBlur(object e) {
    blurStyle();
  }

  bind void onStyleChange(object e) {
    flushStyle();
  }

  bind void onStyleClick(object e) {
    focusStyle();
  }
}
