
class Image extends VerticalNode {
  tag fileDialog = null;
  tag filename = null;
  tag altInput = null;
  tag altNode = null;
  tag picNode = null;
  tag customStyleInput = null;
  tag customStyleNode = null;

  object file = null;

  Image() {
    code = journal_model.NodeType.IMAGE;
  }

  override void create() {
    createPlaceholders();

    fileDialog = <ui.Upload onChange=onFileChange accept="image/\*"/>;

    filename = <div style=style_.filename></div>;
    
    altInput = <input style=ui_style.nestedInput
        onfocus=onAltFocus onblur=onAltBlur
        onchange=onAltChange/>;

    altNode = <div style=style_.altNode active=style_.node_active onclick=onAltClick>
      <div style=style_.editwrap>
        <div style=style_.label> "подсказка:" </div>
        {altInput}
      </div>
    </div>;

    picNode = <div style=style_.pic>
    </div>;

    customStyleInput = <input style=ui_style.nestedInput
        onfocus=onCustomStyleFocus onblur=onCustomStyleBlur
        onchange=onStyleChange
        bind=item.style render=renderInputValue/>;

    customStyleNode = <div style=style_.customStyleNode
        active=style_.customStyleNode_active onclick=onCustomStyleClick>
      <div style=style_.editwrap>
        <div style=style_.label> "Стиль" </div>
        {customStyleInput}
      </div>
    </div>;

    element = <div style=style_.node ondragover=onDragover ondragenter=onDragenter ondragleave=onDragleave ondrop=onDrop>
      {topPlaceholder_}
      {bottomPlaceholder_}
      <div style=style_.move draggable=true ondragstart=onDragstart></div>
      <div style=style_.wrap>
        <div style=style_.buttons>
          <div style=style_.uploadBtn onclick=onUploadBtnClick>
            {fileDialog}
            <span> "выбрать" </span>
          </div>
        </div>
        <div style=style_.filenameNode>
          <div style=style_.label> "новый файл:" </div>
          {filename}
        </div>
        {altNode}
        {picNode}
        {customStyleNode}
      </div>
    </div>;
  }

  void renderInputValue(tag input, object ovalue) {
    input.node.value = ovalue.value;
  }

  void flushStyle() {
    item.style.set(customStyleInput.node.value);
  }

  void flushFilename() {
  }

  void flushAlt() {
  }

  void focusAlt() {
    altNode.setState(web.STATE_ACTIVE);
    altInput.node.focus();
  }

  void blurAlt() {
    altNode.setState(web.STATE_NORMAL);
  }

  void focusCustomStyle() {
    customStyleNode.setState(web.STATE_ACTIVE);
    customStyleInput.node.focus();
  }

  void blurCustomStyle() {
    customStyleNode.setState(web.STATE_NORMAL);
  }

  bind void onFileChange(object files) {
    if files.length < 1 { return; }
    file = files[0];

    browser.setText(filename.node, file.name);
  }

  bind void onAltClick(object e) {
    focusAlt();
  }

  bind void onAltFocus(object e) {
    focusAlt();
  }

  bind void onAltBlur(object e) {
    blurAlt();
  }

  bind void onAltChange(object e) {
    flushAlt();
  }

  bind void onUploadBtnClick(object e) {
    fileDialog.click();
  }

  bind void onCustomStyleFocus(object e) {
    focusCustomStyle();
  }

  bind void onCustomStyleBlur(object e) {
    blurCustomStyle();
  }

  bind void onStyleChange(object e) {
    flushStyle();
  }

  bind void onCustomStyleClick(object e) {
    focusCustomStyle();
  }
}
