
class Image extends VerticalNode {
  tag fileDialog = null;
  tag altInput = null;
  tag altNode = null;
  tag picNode = null;
  tag styleInput = null;
  tag styleNode = null;

  object file = null;

  Image() {
    code = journal_model.NodeType.IMAGE;
  }

  override void create() {
    createPlaceholders();

    fileDialog = <ui.Upload onChange=onFileChange accept="image/\*"/>;

    altInput = <input style=ui_style.nestedInput
        onfocus=onAltFocus onblur=onAltBlur
        onchange=onAltChange
        bind=item.alt render=renderInputValue/>;

    altNode = <div style=style_.altNode active=style_.node_active onclick=onAltClick>
      <div style=style_.editwrap>
        <div style=style_.label> "подсказка:" </div>
        {altInput}
      </div>
    </div>;

    picNode = <img style=style_.pic onclick=onPicClick
        bind=item.filename render=renderImgFilename/>;

    styleInput = <input style=ui_style.nestedInput
        onfocus=onStyleFocus onblur=onStyleBlur
        onchange=onStyleChange
        bind=item.style render=renderInputValue/>;

    styleNode = <div style=style_.styleNode
        active=style_.styleNode_active onclick=onStyleClick>
      <div style=style_.styleEditWrap>
        /* <div style=style_.label> "Стиль" </div> */
        {styleInput}
      </div>
    </div>;

    element = <div style=style_.node ondragover=onDragover ondragenter=onDragenter ondragleave=onDragleave ondrop=onDrop>
      {topPlaceholder_}
      {bottomPlaceholder_}
      <div style=style_.move draggable=true ondragstart=onDragstart></div>
      <div style=style_.wrap>
        {fileDialog}
        /* <div style=style_.buttons> */
        /*   <div style=style_.uploadBtn onclick=onUploadBtnClick> */
        /*     <span> "выбрать" </span> */
        /*   </div> */
        /* </div> */
        {picNode}
        {altNode}
        {styleNode}
      </div>
    </div>;
  }

  void renderValue(tag elem, object ovalue) {
    elem.setValue(ovalue.value);
  }

  void renderInputValue(tag input, object ovalue) {
    input.node.value = ovalue.value;
  }

  void renderImgFilename(tag elem, object filename) {
    if filename.value.length > 0 {
      elem.node.src = "/static/img/300x225-" + filename.value;
    }
  }

  void flushStyle() {
    item.style.set(styleInput.node.value);
  }

  void flushFilename() {
  }

  void flushAlt() {
    item.alt.set(altInput.node.value);
  }

  void focusAlt() {
    altNode.setState(web.STATE_ACTIVE);
    altInput.node.focus();
  }

  void blurAlt() {
    altNode.setState(web.STATE_NORMAL);
  }

  void focusStyle() {
    styleNode.setState(web.STATE_ACTIVE);
    styleInput.node.focus();
  }

  void blurStyle() {
    styleNode.setState(web.STATE_NORMAL);
  }

  bind void onFileChange(object files) {
    if files.length < 1 { return; }

    auto me = this;
    auto fu = new net.FileUpload();
    fu.polymorph = item.polymorph;
    fu.collection.set(this.itemsColl_);
    fu.field.set(journal_model.ImageField.FILENAME);
    fu.objId.set(item.id.value);

    net.uploadFiles(files, fu, void (object filenames) { // success
      // debug
      browser.log("Image.onFileChange uploadFiles success:");
      browser.log(filenames);

      if filenames.length > 0 {
        auto first = filenames[0];
        if first.length > 0 {
          me.item.filename.set(first);
        }
      }
    }, void (int status, string response) { // fail
    }, void (float progress) { // progress
    });

    // upload file to session
    /* net.postSessionFiles(files, item.id.value, void (object sessionFiles) { // success */
    /*   me.item.filename.set(sessionFiles.first.obj.filename.value); */
    /* }, void (int status, string response) { // fail */
    /*   browser.log("error upload file, status: " + status + ", response: " + */
    /*       response); */
    /* }, void (float progress) { // progress */
    /*   // TODO: show upload progress */
    /*   browser.log("upload image progress: " + progress); */
    /* }); */

    /* browser.setText(filename.node, file.name); */
  }

  bind void onAltClick(object e) {
    focusAlt();
  }

  bind void onAltFocus(object e) {
    focusAlt();
  }

  bind void onAltBlur(object e) {
    blurAlt();
  }

  bind void onAltChange(object e) {
    flushAlt();
  }

  bind void onUploadBtnClick(object e) {
    fileDialog.click();
  }

  bind void onPicClick(object e) {
    fileDialog.click();
  }

  bind void onStyleFocus(object e) {
    focusStyle();
  }

  bind void onStyleBlur(object e) {
    blurStyle();
  }

  bind void onStyleChange(object e) {
    flushStyle();
  }

  bind void onStyleClick(object e) {
    focusStyle();
  }
}
