

class Model implements Collectable {
  auto id = new String();
  int polymorph = 0;
  bool isLocalUpdate = false;

  auto eventUpdate = new Event();

  // link document
  object link = null;

  Model() {
    id.code = ModelField.ID;
  }

  string getId() {
    return id.value;
  }

  void updateLink(object updates) {
    if link is null or isLocalUpdate { return; }

    link.update({
      parentId: null,
      parentField: 0,
      polymorph: polymorph,
      id: id.value,
      updates: updates,
      obj: this,
    });
  }

  void enter();
  void exit();
  string serialize();
  void setField(int name, string value);

  void unserialize(object pices) {
    for int i = 0; i < pices.length; i=i+2 {
      this.setField(window.parseInt(pices[i]), pices[i+1]);
    }
  }

  void unserializeLocal(object pices) {
    isLocalUpdate = true;
    unserialize(pices);
    isLocalUpdate = false;
  }
}


enum ModelField {
  ID = 1,
}


enum SyncName {
  OP = 1,
  NAME,
  PARAMS,
  BEFOREID,
  OBJ,
  ID,
  PARENT_ID, // for subcollection
  PARENT_FIELD, // for subcollection
  POLYMORPH, // for polymorphic collection object
}

enum SyncOp {
  NONE = 0,
  UPDATE,
  INSERT,
  APPEND,
  REMOVE,
  MOVE,
}
