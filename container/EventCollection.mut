
class EventCollection {
  auto eventUpdateId = new Event();
  auto eventUpdate = new Event();
  auto eventReset = new Event();
  auto eventInsert = new Event();
  auto eventInsertBefore = new Event();
  auto eventAppend = new Event();
  auto eventMove = new Event();
  auto eventRemove = new Event();

  int updateTimerId = 0;
  object updates_ = [];

  override void updateId(string id, string old) {
    eventUpdateId.notify2(id, old);
  }

  override void update(string id, object updates) {
    eventUpdate.notify({
      id: id,
      updates: updates,
    });
  }

  override void insert(object obj) {
    eventInsert.notify({
      obj: obj,
    });
  }

  override void insertBefore(object obj, string beforeId) {
    eventInsertBefore.notify({
      obj: obj,
      beforeId: beforeId,
    });
  }

  override void append(object obj) {
    eventAppend.notify({
      obj: obj,
    });
  }

  override void move(string id, string beforeId) {
    eventMove.notify({
      id: id,
      beforeId: beforeId,
    });
  }

  override void remove(string id) {
    eventRemove.notify({
      id: id,
    });
  }

  override void clear() {
    eventReset.notify();
  }
}
