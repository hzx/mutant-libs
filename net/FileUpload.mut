
class FileUpload extends container.Model {
  auto collection = new container.Int();
  auto field = new container.Int();
  auto objId = new container.String();

  void setField(int field_, string value) {
    switch field_ {
      case FileUploadField.POLYMORPH:
        int val = window.parseInt(value, 10);
        polymorph = val;
        break;
      case FileUploadField.COLLECTION:
        int val = window.parseInt(value, 10);
        collection.set(val);
        break;
      case FileUploadField.FIELD:
        int val = window.parseInt(value, 10);
        field.set(val);
        break;
      case OBJ_ID:
        objId.set(value);
        break;
    }
  }

  void enter() {}

  void exit() {}

  string serialize() {
    auto buf = [];

    if polymorph > 0 { buf.push(FileUploadField.POLYMORPH, polymorph); }
    if collection.has { buf.push(FileUploadField.COLLECTION, collection.value); }
    if field.has { buf.push(FileUploadField.FIELD, field.value); }
    if objId.has { buf.push(FileUploadField.OBJ_ID, objId.value); }

    return buf.join(":");
  }
}


enum FileUploadField {
  POLYMORPH = 2,
  COLLECTION,
  FIELD,
  OBJ_ID,
}
