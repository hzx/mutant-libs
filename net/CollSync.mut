
class CollSync {
  int table = 0;
  container.ObservableCollection collection = null;
  string syncUrl = "";
  string xsrf = "";

  void enter() {
    collection.eventUpdate.listen(onUpdate);
    /* collection.eventReset.listen(onReset); */
    collection.eventInsert.listen(onInsert);
    collection.eventInsertBefore.listen(onInsertBefore);
    collection.eventAppend.listen(onAppend);
    collection.eventMove.listen(onMove);
    collection.eventRemove.listen(onRemove);
  }

  void exit() {
    collection.eventUpdate.unlisten(onUpdate);
    /* collection.eventReset.unlisten(onReset); */
    collection.eventInsert.unlisten(onInsert);
    collection.eventInsertBefore.unlisten(onInsertBefore);
    collection.eventAppend.unlisten(onAppend);
    collection.eventMove.unlisten(onMove);
    collection.eventRemove.unlisten(onRemove);
  }

  bind void onUpdate(string id, string updates) {
    auto data = {};
    
    data[container.SyncName.OP] = container.SyncOp.UPDATE;
    data[container.SyncName.NAME] = table;
    data[container.SyncName.ID] = id;
    data[container.SyncName.PARAMS] = updates;

    if collection.parentId.length > 0 {
      data[container.SyncName.PARENT_ID] = collection.parentId;
      data[container.SyncName.PARENT_FIELD] = collection.parentField;
    }

    auto me = this;

    browser.post(syncUrl, data, xsrf, void (string response) { // success
      me.exit();
      // update object
      auto obj = me.collection.get(id);
      if obj is null { return; }
      me.exit();
      obj.unserialize(response.split(container.DELIM_FIELD));
      me.enter();
    }, void (int status, string response) { // fail
      // TODO: send error to browser net errors
    }, void () {}); // progress
  }

  /* bind void onReset() { */
  /*   auto data = {}; */
    
  /*   data[container.SyncName.OP] = container.SyncOp. */
  /* } */

  bind void onInsert(object obj) {
    auto data = {};
    
    data[container.SyncName.OP] = container.SyncOp.INSERT;
    data[container.SyncName.NAME] = table;
    data[container.SyncName.BEFOREID] = "";
    data[container.SyncName.OBJ] = obj.serialize();

    if collection.parentId.length > 0 {
      data[container.SyncName.PARENT_ID] = collection.parentId;
      data[container.SyncName.PARENT_FIELD] = collection.parentField;
    }

    auto me = this;

    browser.post(syncUrl, data, xsrf, void (string response) { // success
      me.exit();
      obj.unserialize(response.split(container.DELIM_FIELD));
      me.enter();
    }, void (int status, string response) { // fail
      // TODO: send error to browser net errors
    }, void () {}); // progress
  }

  bind void onInsertBefore(object obj, string beforeId) {
    auto data = {};
    
    data[container.SyncName.OP] = container.SyncOp.INSERT;
    data[container.SyncName.NAME] = table;
    data[container.SyncName.BEFOREID] = beforeId;
    data[container.SyncName.OBJ] = obj.serialize();

    if collection.parentId.length > 0 {
      data[container.SyncName.PARENT_ID] = collection.parentId;
      data[container.SyncName.PARENT_FIELD] = collection.parentField;
    }

    auto me = this;

    browser.post(syncUrl, data, xsrf, void (string response) { // success
      me.exit();
      obj.unserialize(response.split(container.DELIM_FIELD));
      me.enter();
    }, void (int status, string response) { // fail
      // TODO: send error to browser net errors
    }, void () {}); // progress
  }

  bind void onAppend(object obj) {
    auto data = {};
    
    data[container.SyncName.OP] = container.SyncOp.APPEND;
    data[container.SyncName.NAME] = table;
    data[container.SyncName.OBJ] = obj.serialize();

    if collection.parentId.length > 0 {
      data[container.SyncName.PARENT_ID] = collection.parentId;
      data[container.SyncName.PARENT_FIELD] = collection.parentField;
    }

    auto me = this;

    browser.post(syncUrl, data, xsrf, void (string response) { // success
      me.exit();
      obj.unserialize(response.split(container.DELIM_FIELD));
      me.enter();
    }, void (int status, string response) { // fail
      // TODO: send error to browser net errors
    }, void () {}); // progress
  }

  bind void onMove(string id, string beforeId) {
    auto data = {};
    
    data[container.SyncName.OP] = container.SyncOp.MOVE;
    data[container.SyncName.NAME] = table;
    data[container.SyncName.ID] = id;
    data[container.SyncName.BEFOREID] = beforeId;

    if collection.parentId.length > 0 {
      data[container.SyncName.PARENT_ID] = collection.parentId;
      data[container.SyncName.PARENT_FIELD] = collection.parentField;
    }

    auto me = this;

    browser.post(syncUrl, data, xsrf, void (string response) { // success
      // do nothing
    }, void (int status, string response) { // fail
      // TODO: send error to browser net errors
    }, void () {}); // progress
  }

  bind void onRemove(string id) {
    auto data = {};
    
    data[container.SyncName.OP] = container.SyncOp.REMOVE;
    data[container.SyncName.NAME] = table;
    data[container.SyncName.ID] = id;

    if collection.parentId.length > 0 {
      data[container.SyncName.PARENT_ID] = collection.parentId;
      data[container.SyncName.PARENT_FIELD] = collection.parentField;
    }

    auto me = this;

    browser.post(syncUrl, data, xsrf, void (string response) { // success
      // do nothing
    }, void (int status, string response) { // fail
      // TODO: send error to browser net errors
    }, void () {}); // progress
  }
}
