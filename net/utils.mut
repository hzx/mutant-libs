
Collection collection(int table, string url) {
  auto coll = new Collection();

  coll.table = table;
  coll.url = url;

  return coll;
}

Document document(int table, string url, container.Model obj) {
  auto doc = new Document();

  doc.table = table;
  doc.url = url;
  doc.obj = obj;

  return doc;
}

void uploadFiles(object files, FileUpload fu, object success, object fail,
    object progress) {
  browser.postFiles(browser.Net.addFileUrl, files,
      fu.serialize(), void (string response) { // success
    success(response.split(container.DELIM_FIELD));
  }, void (int status, string response) { // fail
    fail(status, response);
  }, void (object e) { // progress
    progress(e.loaded / e.total);
  });
}

void postSessionFiles(object files, string hash, object success, object fail,
    object progress) {
  browser.postFiles(browser.Net.addFileUrl, files, hash, void (string response) { // success
    // unserialize session.model.File items
    auto rows = response.split(container.DELIM_ROW);
    auto sessionFiles = new container.ObservableCollection();

    for auto row: rows {
      auto pices = row.split(container.DELIM_FIELD);
      if pices.length < 2 { continue; }

      auto file = new session_model.File();
      file.unserializeLocal(pices);

      sessionFiles.appendLocal(file);
    }

    success(sessionFiles);
  }, void (int status, string response) { // fail
    browser.notifyNetworkFail(status, response);
    fail(status, response);
  }, void (object e) {
    progress(e.loaded / e.total);
  }); // progress
}
